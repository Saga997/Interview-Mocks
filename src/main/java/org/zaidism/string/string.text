Why String is immutable

Key points:
    • String pool is possible only because String is immutable in Java. This way Java Runtime saves a lot of heap space because different String variables can refer to the
      same String variable in the pool.

    • If String is not immutable then it would cause a severe security threat to the application. For example, database username, password are passed as String to get database
      connection and in socket programming host and port details passed as String. Since String is immutable, its value can't be change otherwise any hacker could change the referenced
      value to cause security issues in the application.

    • Since String is immutable, it is safe for multithreading. A single String instance can be shared across different threads. This avoids the use of synchronization for thread safety.

    • Since String is immutable, its hashcode is cached at the time of creation and it doesn't need to be calculated again. This makes it a great candidate for the key in a Map and
     its processing is faster than other HashMap key objects. This is why String is the most widely used as HashMap keys.